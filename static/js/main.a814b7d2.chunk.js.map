{"version":3,"sources":["components/GeneralInfo.js","components/Education.js","components/Experience.js","components/CV.js","App.js","index.js"],"names":["GeneralInfo","props","form","onSubmit","handleSubmit","className","htmlFor","type","defaultValue","state","name","email","phone","value","info","icon","faEdit","onClick","editHandler","showForm","bind","event","preventDefault","inputs","target","getElementsByTagName","console","log","this","setState","content","Component","Education","e","newSchool","cert","completed","edit","prev","education","editSchool","index","newSchools","schoolToChange","splice","addChangedSchool","deleteSchool","schools","educationContent","map","school","faTrash","faPlus","Experience","company","title","duration","responsibilities","jobs","newJobs","addChangedJob","deleteJob","Jobs","jobsContent","job","CV","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a814b7d2.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faEdit } from '@fortawesome/free-solid-svg-icons'\n\nexport default class GeneralInfo extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      showForm: false,\n      name: '',\n      email: '',\n      phone: ''\n    }\n    this.handleSubmit = this.handleSubmit.bind(this)\n    this.form = this.form.bind(this)\n    this.info = this.info.bind(this)\n    this.editHandler = this.editHandler.bind(this)\n  }\n  \n  handleSubmit(event) {\n    event.preventDefault()\n    let inputs = event.target.getElementsByTagName('input')\n    console.log(inputs)\n\n    this.setState({\n      showForm: false,\n      name: inputs[0].value,\n      email: inputs[1].value,\n      phone: inputs[2].value\n    })\n  }\n\n  editHandler() {\n    this.setState({\n      showForm: true\n    })\n  }\n\n  form = () => {\n    return (\n      <form onSubmit={this.handleSubmit} className=\"grid grid-cols-2 shadow-xl border-2 border-blue-400\">\n        <label className=\"text-right m-2\">Name</label>\n        <input htmlFor=\"name\" type=\"text\" defaultValue={this.state.name} className=\"border m-2 border-gray-500 rounded pl-1 focus:outline-none focus:ring focus:border-blue-300\"  />\n\n        <label className=\"text-right m-2\">Email</label>\n        <input htmlFor=\"Email\" type=\"email\" defaultValue={this.state.email} className=\"border m-2 border-gray-500 rounded pl-1 focus:outline-none focus:ring focus:border-blue-300\"  />\n\n        <label className=\"text-right m-2\">Phone Number</label>\n        <input htmlFor=\"phone number\" type=\"text\" defaultValue={this.state.phone} className=\"border m-2 border-gray-500 rounded pl-1 focus:outline-none focus:ring focus:border-blue-300\"  />\n\n        <input className=\"col-span-2 w-2/4 my-2 mx-auto rounded hover:bg-blue-400\" type=\"submit\" value=\"submit\" />\n      </form>\n    )\n  }\n    \n\n  info = () => {\n    return(\n      <div className=\"grid grid-cols-1 text-center shadow-xl border-2 border-blue-400 p-3\">\n        <p className=\"m-2\">Name: {this.state.name}</p>\n        <p className=\"m-2\">Email: {this.state.email}</p>\n        <p className=\"m-2\">Phone Number: {this.state.phone}</p>\n        <FontAwesomeIcon icon={faEdit} className=\"absolute cursor-pointer\" onClick={this.editHandler} />\n      </div>\n    )\n  }\n\n  render() {\n    let content\n    if (this.state.showForm) {\n      content = this.form()\n    } else {\n      content = this.info()\n    }\n\n\n    return (\n      <div className=\"mx-auto mb-4 w-2/4\">\n        <h2 className=\"bg-blue-400 text-center text-xl\">General Information</h2>\n        <div>{content}</div>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlus } from '@fortawesome/free-solid-svg-icons'\nimport { faEdit } from '@fortawesome/free-solid-svg-icons'\nimport { faTrash } from '@fortawesome/free-solid-svg-icons'\n\nexport default class Education extends Component {\n  constructor(props) {\n    super(props)\n    this.showForm = this.showForm.bind(this)\n    this.handleSubmit = this.handleSubmit.bind(this)\n    this.deleteSchool = this.deleteSchool.bind(this)\n    this.addChangedSchool = this.addChangedSchool.bind(this)\n    this.state = {\n      showForm: false,\n      education: []\n    }\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault()\n    let inputs = e.target.getElementsByTagName('input')\n    console.log(inputs[0].value)\n\n    let newSchool = {\n      name: inputs[0].value,\n      cert: inputs[1].value,\n      completed: inputs[2].value,\n      edit: false\n    }\n\n    this.setState(prev => ({\n      education: [...prev.education, newSchool],\n      showForm: false\n    }))\n  }\n\n  showForm = () => {\n    this.setState({\n      showForm: true\n    })\n  }\n\n  editSchool = (index) => {\n    let newSchools = this.state.education\n    let schoolToChange = newSchools[index]\n    schoolToChange.edit = true\n    newSchools.splice(index, 1, schoolToChange)\n    console.log(schoolToChange)\n    this.setState({\n      education: newSchools\n    })\n  }\n\n  addChangedSchool = (event) => {\n    event.preventDefault()\n    let inputs = event.target.getElementsByTagName('input')\n    let index = inputs[3].value\n    let newSchool = {\n      name: inputs[0].value,\n      cert: inputs[1].value,\n      completed: inputs[2].value,\n      edit: false\n    }\n\n    let newSchools = this.state.education\n    newSchools.splice(index, 1, newSchool)\n\n    this.setState({\n      education: newSchools\n    })\n  }\n\n  deleteSchool = (index) => {\n    let newSchools = this.state.education\n    newSchools.splice(index, 1)\n    console.log('deleteSchool func')\n    console.log(index)\n\n    this.setState({\n      schools: newSchools\n    })\n  }\n\n  render() {\n    const educationContent = this.state.education.map((school, index) => {\n      let element\n      if (!school.edit) {\n        element = (\n          <div key={index} className=\"m-3 p-3 border border-blue-300 shadow-lg relative\">\n            <p>School: {school.name}</p>\n            <p>Certificate: {school.cert}</p>\n            <p>Completion Date: {school.completed}</p>\n            <FontAwesomeIcon icon={faEdit} className=\"absolute top-4 right-1 cursor-pointer\" onClick={() => this.editSchool(index)}/>\n            <FontAwesomeIcon icon={faTrash} className=\"absolute top-16 right-2 cursor-pointer\" onClick={() => this.deleteSchool(index)} />\n          </div>\n        )\n      } else {\n        element = (\n          <form key={index} onSubmit={this.addChangedSchool} className=\"grid grid-cols-2 shadow-lg border m-3 border-green-400\">\n          <label className=\"text-right m-1\">School</label>\n          <input htmlFor=\"school\" type=\"text\" defaultValue={school.name} className=\"border border-gray-500 rounded pl-1 focus:outline-none focus:ring focus:border-blue-300 m-1\"/>\n\n          <label className=\"text-right m-1\">Certificate</label>\n          <input htmlFor=\"cert\" type=\"text\" defaultValue={school.cert} className=\"border border-gray-500 rounded pl-1 focus:outline-none focus:ring focus:border-blue-300 m-1\"  />\n\n          <label className=\"text-right m-1\">Completion Date</label>\n          <input htmlFor=\"completed date\" type=\"text\" defaultValue={school.completed} className=\"border border-gray-500 rounded pl-1 focus:outline-none focus:ring focus:border-blue-300 m-1\"  />\n\n          <input type=\"hidden\" value={index} />\n\n         <input className=\"col-span-2 w-2/4 my-2 mx-auto rounded hover:bg-blue-400\" type=\"submit\" value=\"submit\" />\n        </form>\n        )\n      }\n      return element\n    })\n\n    let form\n\n    if (this.state.showForm) {\n      form = (\n        <form onSubmit={this.handleSubmit} className=\"grid grid-cols-2 shadow-lg border m-3 border-green-400\">\n        <label className=\"text-right m-1\">School</label>\n        <input htmlFor=\"school\" type=\"text\" defaultValue={this.state.name} className=\"border border-gray-500 rounded pl-1 focus:outline-none focus:ring focus:border-blue-300 m-1\"/>\n\n        <label className=\"text-right m-1\">Certificate</label>\n        <input htmlFor=\"cert\" type=\"text\" defaultValue={this.state.email} className=\"border border-gray-500 rounded pl-1 focus:outline-none focus:ring focus:border-blue-300 m-1\"  />\n\n        <label className=\"text-right m-1\">Completion Date</label>\n        <input htmlFor=\"completed date\" type=\"text\" defaultValue={this.state.phone} className=\"border border-gray-500 rounded pl-1 focus:outline-none focus:ring focus:border-blue-300 m-1\"  />\n\n        <input className=\"col-span-2 w-2/4 my-2 mx-auto rounded hover:bg-blue-400\" type=\"submit\" value=\"submit\" />\n      </form>\n      )\n    } else {\n      form = <FontAwesomeIcon icon={faPlus} className=\"cursor-pointer mx-auto my-2\" onClick={this.showForm} />\n    }\n\n    return (\n      <div className=\"mx-auto mb-4 w-2/4\">\n        <h2 className=\"bg-blue-400 text-center text-xl\">Education</h2>\n        <div className=\"shadow-xl border-2 border-blue-400 grid grid-cols-1 text-center relative\">\n          {educationContent}\n          {form}\n        </div>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlus } from '@fortawesome/free-solid-svg-icons'\nimport { faEdit } from '@fortawesome/free-solid-svg-icons'\nimport { faTrash } from '@fortawesome/free-solid-svg-icons'\n\nexport default class Experience extends Component {\n  constructor(props) {\n    super(props)\n    this.showForm = this.showForm.bind(this)\n    this.handleSubmit = this.handleSubmit.bind(this)\n    this.deleteJob = this.deleteJob.bind(this)\n    this.addChangedJob = this.addChangedJob.bind(this)\n    this.state = {\n      showForm: false,\n      jobs: []\n    }\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault()\n    let inputs = e.target.getElementsByTagName('input')\n    let newSchool = {\n      company: inputs[0].value,\n      title: inputs[1].value,\n      duration: inputs[2].value,\n      responsibilities: inputs[3].value,\n      edit: false\n    }\n\n    this.setState(prev => ({\n      jobs: [...prev.jobs, newSchool],\n      showForm: false\n    }))\n  }\n\n  showForm = () => {\n    this.setState({\n      showForm: true\n    })\n  }\n\n  editSchool = (index) => {\n    let newJobs = this.state.jobs\n    let schoolToChange = newJobs[index]\n    schoolToChange.edit = true\n    newJobs.splice(index, 1, schoolToChange)\n    console.log(schoolToChange)\n    this.setState({\n      jobs: newJobs\n    })\n  }\n\n  addChangedJob = (event) => {\n    event.preventDefault()\n    let inputs = event.target.getElementsByTagName('input')\n    let index = inputs[4].value\n    let newSchool = {\n      company: inputs[0].value,\n      title: inputs[1].value,\n      duration: inputs[2].value,\n      responsibilities: inputs[3].value,\n      edit: false\n    }\n\n    let newJobs = this.state.jobs\n    newJobs.splice(index, 1, newSchool)\n\n    this.setState({\n      jobs: newJobs\n    })\n  }\n\n  deleteJob = (index) => {\n    let newJobs = this.state.jobs\n    newJobs.splice(index, 1)\n    console.log('deleteJob func')\n    console.log(index)\n\n    this.setState({\n      Jobs: newJobs\n    })\n  }\n\n  render() {\n    const jobsContent = this.state.jobs.map((job, index) => {\n      let element\n      if (!job.edit) {\n        element = (\n          <div key={index} className=\"m-3 p-3 border border-blue-300 shadow-lg relative\">\n            <p>Company:  {job.company}</p>\n            <p>Title:  {job.title}</p>\n            <p>Duration:  {job.duration}</p>\n            <p>Responsibilities:  {job.responsibilities}</p>\n            <FontAwesomeIcon icon={faEdit} className=\"absolute top-4 right-1 cursor-pointer\" onClick={() => this.editSchool(index)}/>\n            <FontAwesomeIcon icon={faTrash} className=\"absolute top-16 right-2 cursor-pointer\" onClick={() => this.deleteJob(index)} />\n          </div>\n        )\n      } else {\n        element = (\n          <form key={index} onSubmit={this.addChangedJob} className=\"grid grid-cols-2 shadow-lg border m-3 border-green-400\">\n          <label className=\"text-right m-1\">Company</label>\n          <input htmlFor=\"company\" type=\"text\" defaultValue={job.company} className=\"border border-gray-500 rounded pl-1 focus:outline-none focus:ring focus:border-blue-300 m-1\"/>\n\n          <label className=\"text-right m-1\">Title</label>\n          <input htmlFor=\"title\" type=\"text\" defaultValue={job.title} className=\"border border-gray-500 rounded pl-1 focus:outline-none focus:ring focus:border-blue-300 m-1\"  />\n\n          <label className=\"text-right m-1\">Duration</label>\n          <input htmlFor=\"duration\" type=\"text\" defaultValue={job.duration} className=\"border border-gray-500 rounded pl-1 focus:outline-none focus:ring focus:border-blue-300 m-1\"  />\n\n          <label className=\"text-right m-1\">Responsibilities</label>\n          <input htmlFor=\"responsibilities\" type=\"text\" defaultValue={job.responsibilities} className=\"border border-gray-500 rounded pl-1 focus:outline-none focus:ring focus:border-blue-300 m-1\"  />\n\n          <input type=\"hidden\" value={index} />\n\n         <input className=\"col-span-2 w-2/4 my-2 mx-auto rounded hover:bg-blue-400\" type=\"submit\" value=\"submit\" />\n        </form>\n        )\n      }\n      return element\n    })\n\n    let form\n\n    if (this.state.showForm) {\n      form = (\n        <form onSubmit={this.handleSubmit} className=\"grid grid-cols-2 shadow-lg border m-3 border-green-400\">\n        <label className=\"text-right m-1\">Company</label>\n        <input htmlFor=\"school\" type=\"text\" className=\"border border-gray-500 rounded pl-1 focus:outline-none focus:ring focus:border-blue-300 m-1\"/>\n\n        <label className=\"text-right m-1\">Title</label>\n        <input htmlFor=\"cert\" type=\"text\" className=\"border border-gray-500 rounded pl-1 focus:outline-none focus:ring focus:border-blue-300 m-1\"  />\n\n        <label className=\"text-right m-1\">Duration</label>\n        <input htmlFor=\"completed date\" type=\"text\" className=\"border border-gray-500 rounded pl-1 focus:outline-none focus:ring focus:border-blue-300 m-1\"  />\n\n        <label className=\"text-right m-1\">Responsibilities</label>\n        <input htmlFor=\"responsibilities\" type=\"text\" className=\"border border-gray-500 rounded pl-1 focus:outline-none focus:ring focus:border-blue-300 m-1\"  />\n\n        <input className=\"col-span-2 w-2/4 my-2 mx-auto rounded hover:bg-blue-400\" type=\"submit\" value=\"submit\" />\n      </form>\n      )\n    } else {\n      form = <FontAwesomeIcon icon={faPlus} className=\"cursor-pointer mx-auto my-2\" onClick={this.showForm} />\n    }\n\n    return (\n      <div className=\"mx-auto mb-4 w-2/4\">\n        <h2 className=\"bg-blue-400 text-center text-xl\">Experience</h2>\n        <div className=\"shadow-xl border-2 border-blue-400 grid grid-cols-1 text-center relative\">\n          {jobsContent}\n          {form}\n        </div>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport GeneralInfo from './GeneralInfo'\nimport Education from './Education'\nimport Experience from './Experience'\n\nexport default class CV extends Component {\n  render() {\n    return (\n      <div>\n        <GeneralInfo />\n        <Education />\n        <Experience />\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport CV from './components/CV'\n\nfunction App() {\n  return (\n    <div>\n      <h1 className=\"bg-blue-300 text-center text-3xl font-bold shadow-xl mb-4 p-4\">CV Builder</h1>\n      <CV />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css'\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}